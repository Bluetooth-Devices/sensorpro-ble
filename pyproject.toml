[project]
name = "sensorpro-ble"
version = "0.7.1"
description = "SensorPro BLE Devices"
authors = [{ name = "J. Nick Koston", email = "nick@koston.org" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["classifiers", "dependencies"]

[project.urls]
"Repository" = "https://github.com/bluetooth-devices/sensorpro-ble"
"Documentation" = "https://sensorpro-ble.readthedocs.io"
"Bug Tracker" = "https://github.com/bluetooth-devices/sensorpro-ble/issues"
"Changelog" = "https://github.com/bluetooth-devices/sensorpro-ble/blob/main/CHANGELOG.md"

[tool.poetry]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]
packages = [
    { include = "sensorpro_ble", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
habluetooth = {version = ">=3.42.0", python = ">=3.11,<3.14"}
bluetooth-data-tools = ">=1.28.0"

# Documentation Dependencies
Sphinx = {version = ">=5,<8", optional = true}
sphinx-rtd-theme = {version = ">=1,<4", optional = true}
myst-parser = {version = ">=0.18,<3.1", optional = true}
sensor-state-data = ">=2.6.0"
bluetooth-sensor-state-data = ">=1.8.0"

[tool.poetry.extras]
docs = [
    "myst-parser",
    "sphinx",
    "sphinx-rtd-theme",
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3"
pytest-cov = "^6.1"

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/sensorpro_ble/__init__.py:__version__"]
build_command = "pip install poetry && poetry build"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=sensorpro_ble --cov-report=term-missing:skip-covered"
pythonpath = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
]

[tool.isort]
profile = "black"
known_first_party = ["sensorpro_ble", "tests"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
    'docs/.*',
    'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = "docs.*"
ignore_errors = true

[build-system]
requires = ["poetry-core>=2.1.0"]
build-backend = "poetry.core.masonry.api"
